import java.time.ZoneId;
import kotlin.Boolean;
import kotlin.Int;

CREATE TABLE IF NOT EXISTS game (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    ruleId INTEGER NOT NULL,
    isRest INTEGER AS Boolean NOT NULL,
    unixTimeScheduled INTEGER NOT NULL,
    unixTimeSubmitted INTEGER NOT NULL,
    zoneId TEXT AS ZoneId NOT NULL,
    categoryId INTEGER NOT NULL,
    categoryOrderNumber INTEGER AS Int NOT NULL,
    tournamentId INTEGER NOT NULL,
    playerIdLeftOne INTEGER NOT NULL,
    playerIdLeftTwo INTEGER,
    playerIdRightOne INTEGER,
    playerIdRightTwo INTEGER,
    FOREIGN KEY (categoryId) REFERENCES category (id),
    FOREIGN KEY (tournamentId) REFERENCES tournament (id),
    FOREIGN KEY (playerIdLeftOne) REFERENCES playerTable (id),
    FOREIGN KEY (playerIdLeftTwo) REFERENCES playerTable (id),
    FOREIGN KEY (playerIdRightOne) REFERENCES playerTable (id),
    FOREIGN KEY (playerIdRightTwo) REFERENCES playerTable (id)
);

add:
INSERT INTO
    game(
        ruleId,
        isRest,
        unixTimeScheduled,
        unixTimeSubmitted,
        zoneId,
        categoryId,
        categoryOrderNumber,
        tournamentId,
        playerIdLeftOne,
        playerIdLeftTwo,
        playerIdRightOne,
        playerIdRightTwo
    )
VALUES
    (
        :ruleId,
        :isRest,
        :unixTimeScheduled,
        :unixTimeSubmitted,
        :zoneId,
        :categoryId,
        :categoryOrderNumber,
        :tournamentId,
        :playerIdLeftOne,
        :playerIdLeftTwo,
        :playerIdRightOne,
        :playerIdRightTwo
    );

lastInsertedId:
SELECT
    last_insert_rowid()
FROM
    game;