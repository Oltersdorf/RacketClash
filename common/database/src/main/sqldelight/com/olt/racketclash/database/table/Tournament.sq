import kotlin.Int;

CREATE TABLE IF NOT EXISTS tournament(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    numberOfCourts INTEGER AS Int NOT NULL,
    location TEXT NOT NULL,
    startTime INTEGER NOT NULL,
    endTime INTEGER NOT NULL
);

selectFilteredAndOrdered:
WITH filteredAndOrdered AS (
    SELECT
        *, 0 AS playersCount, 0 AS categoriesCount, 0 AS deletable
    FROM
        tournament
    WHERE
        name LIKE '%' || :nameFilter || '%' AND
        location LIKE '%' || :locationFilter || '%' AND
        startTime >= :startFilter AND
        endTime <= :endFilter
)
SELECT
    *
FROM
    filteredAndOrdered
ORDER BY
    CASE :sorting
        WHEN 'nameAsc' THEN name
        WHEN 'locationAsc' THEN location
        WHEN 'courtsAsc' THEN numberOfCourts
        WHEN 'startDateTimeAsc' THEN startTime
        WHEN 'endDateTimeAsc' THEN endTime
        WHEN 'playersAsc' THEN playersCount
    END ASC,
    CASE :sorting
        WHEN 'nameDesc' THEN name
    END DESC
LIMIT :limit OFFSET :offset;

selectFilteredAndOrderedSize:
SELECT
    count(*) AS size
FROM
    tournament
WHERE
    name LIKE '%' || :nameFilter || '%' AND
    location LIKE '%' || :locationFilter || '%' AND
    startTime >= :startFilter AND
    endTime <= :endFilter;

selectLast:
SELECT
    *, 0 AS playersCount, 0 AS categoriesCount, 0 AS deletable
FROM
    tournament
ORDER BY
    id DESC
LIMIT
    :n;

selectSingle:
SELECT
    *, 0 AS playersCount, 0 AS categoriesCount, 0 AS deletable
FROM
    tournament
WHERE
    id = :id;

locations:
SELECT
    location
FROM
    tournament
WHERE
    location LIKE '%' || :locationFilter || '%';

add:
INSERT INTO
    tournament(name, numberOfCourts, location, startTime, endTime)
VALUES
    (:name, :numberOfCourts, :location, :startTime, :endTime);

update:
UPDATE
    tournament
SET
    name = :name,
    numberOfCourts = :numberOfCourts,
    location = :location,
    startTime = :startTime,
    endTime = :endTime
WHERE
    id = :id;

delete:
DELETE FROM
    tournament
WHERE
    id = :id;