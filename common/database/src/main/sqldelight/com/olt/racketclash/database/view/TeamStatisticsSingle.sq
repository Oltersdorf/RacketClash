CREATE VIEW IF NOT EXISTS teamStatisticsSingle AS
SELECT
    teamTable.id,
    CAST(TOTAL(IIF(playerIdLeftOne = playerId, leftPointsWon, rightPointsWon)) AS INTEGER) AS singlePointsWon,
    CAST(TOTAL(IIF(playerIdLeftOne = playerId, rightPointsWon, leftPointsWon)) AS INTEGER) AS singlePointsLost,
    CAST(TOTAL(IIF(playerIdLeftOne = playerId, leftSetsWon, rightSetsWon)) AS INTEGER) AS singleSetsWon,
    CAST(TOTAL(IIF(playerIdLeftOne = playerId, rightSetsWon, leftSetsWon)) AS INTEGER) AS singleSetsLost,
    COUNT(IIF(playerIdLeftOne = playerId, NULLIF(leftGamePointsWon > rightGamePointsWon, 0), NULLIF(rightGamePointsWon > leftGamePointsWon, 0))) AS singlesWon,
    COUNT(IIF(playerIdLeftOne = playerId, NULLIF(rightGamePointsWon > leftGamePointsWon, 0), NULLIF(leftGamePointsWon > rightGamePointsWon, 0))) AS singlesLost,
    COUNT(NULLIF(leftGamePointsWon = rightGamePointsWon, 0)) AS singlesDraw,
    CAST(TOTAL(IIF(playerIdLeftOne = playerId, leftGamePointsWon, rightGamePointsWon)) AS INTEGER) AS singleGamePointsWon,
    CAST(TOTAL(IIF(playerIdLeftOne = playerId, rightGamePointsWon, leftGamePointsWon)) AS INTEGER) AS singleGamePointsLost
FROM
    teamTable
LEFT JOIN
    playerToTeam
ON
    teamId = teamTable.id
LEFT JOIN
    gameStatistics
ON
    playerIdLeftOne = playerId OR
    playerIdRightOne = playerId
WHERE
    gameStatistics.tournamentId = teamTable.tournamentId AND
	gameStatistics.playerIdLeftTwo IS NULL AND
	gameStatistics.playerIdRightTwo IS NULL AND
	gameStatistics.playerIdRightOne NOT NULL
GROUP BY
	teamTable.id;
