import kotlin.Int;

CREATE TABLE IF NOT EXISTS ruleTable (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    maxSets INTEGER AS Int NOT NULL,
    winSets INTEGER AS Int NOT NULL,
    maxPoints INTEGER AS Int NOT NULL,
    winPoints INTEGER AS Int NOT NULL,
    pointsDifference INTEGER AS Int NOT NULL,
    gamePointsForWin INTEGER AS Int NOT NULL,
    gamePointsForLose INTEGER AS Int NOT NULL,
    gamePointsForDraw INTEGER AS Int NOT NULL,
    gamePointsForRest INTEGER AS Int NOT NULL,
    setPointsForRest INTEGER AS Int NOT NULL,
    pointPointsForRest INTEGER AS Int NOT NULL
);

filteredAndOrderedRule:
WITH filteredAndOrdered AS (
    SELECT
        *,
        (SELECT COUNT(*) FROM game WHERE game.ruleId = id) +
        (SELECT COUNT(*) FROM schedule WHERE schedule.ruleId = id) AS used
    FROM
        ruleTable
    WHERE
        name LIKE '%' || :name || '%'
)
SELECT
    *
FROM
    filteredAndOrdered
ORDER BY
    CASE :sorting
        WHEN 'nameAsc' THEN name
    END ASC,
    CASE :sorting
        WHEN 'nameDesc' THEN name
    END DESC
LIMIT :limit OFFSET :offset;

selectFilteredAndOrderedSize:
SELECT
    count(*) AS size
FROM
    ruleTable
WHERE
    name LIKE '%' || :name || '%';

selectLast:
SELECT
    *,
    (SELECT COUNT(*) FROM game WHERE game.ruleId = id) +
    (SELECT COUNT(*) FROM schedule WHERE schedule.ruleId = id) AS used
FROM
    ruleTable
ORDER BY
    id DESC
LIMIT :n;

rule:
SELECT
    *,
    (SELECT COUNT(*) FROM game WHERE game.ruleId = id) +
    (SELECT COUNT(*) FROM schedule WHERE schedule.ruleId = id) AS used
FROM
    ruleTable
WHERE
    id = :id;

add:
INSERT INTO
    ruleTable(
        name,
        maxSets, winSets,
        maxPoints, winPoints, pointsDifference,
        gamePointsForWin, gamePointsForLose, gamePointsForDraw,
        gamePointsForRest, setPointsForRest, pointPointsForRest
    )
VALUES
    (
        :name,
        :maxSets, :winSets,
        :maxPoints, :winPoints, :pointsDifference,
        :gamePointsForWin, :gamePointsForLose, :gamePointsForDraw,
        :gamePointsForRest, :setPointsForRest, :pointPointsForRest
    );

update:
UPDATE
    ruleTable
SET
    name = :name,
    maxSets = :maxSets,
    winSets = :winSets,
    maxPoints = :maxPoints,
    winPoints = :winPoints,
    pointsDifference = :pointsDifference,
    gamePointsForWin = :gamePointsForWin,
    gamePointsForLose = :gamePointsForLose,
    gamePointsForDraw = :gamePointsForDraw,
    gamePointsForRest = :gamePointsForRest,
    setPointsForRest = :setPointsForRest,
    pointPointsForRest = :pointPointsForRest
WHERE
    id = :id;

delete:
DELETE FROM
    ruleTable
WHERE
    id = :id;