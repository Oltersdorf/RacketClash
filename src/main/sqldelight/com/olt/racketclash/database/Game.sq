import kotlin.Boolean;
import kotlin.Int;

CREATE TABLE IF NOT EXISTS gameTable (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    roundId INTEGER NOT NULL,
    isDone INTEGER AS Boolean NOT NULL DEFAULT FALSE CHECK (isDone IN (0, 1)),
    playerLeft1Id INTEGER DEFAULT NULL,
    playerLeft2Id INTEGER DEFAULT NULL,
    playerRight1Id INTEGER DEFAULT NULL,
    playerRight2Id INTEGER DEFAULT NULL,
    set1Left INTEGER AS Int NOT NULL DEFAULT 0,
    set1Right INTEGER AS Int NOT NULL DEFAULT 0,
    set2Left INTEGER AS Int NOT NULL DEFAULT 0,
    set2Right INTEGER AS Int NOT NULL DEFAULT 0,
    set3Left INTEGER AS Int NOT NULL DEFAULT 0,
    set3Right INTEGER AS Int NOT NULL DEFAULT 0,
    set4Left INTEGER AS Int NOT NULL DEFAULT 0,
    set4Right INTEGER AS Int NOT NULL DEFAULT 0,
    set5Left INTEGER AS Int NOT NULL DEFAULT 0,
    set5Right INTEGER AS Int NOT NULL DEFAULT 0,
    FOREIGN KEY (roundId) REFERENCES roundTable (id),
    FOREIGN KEY (playerLeft1Id) REFERENCES playerTable (id),
    FOREIGN KEY (playerLeft2Id) REFERENCES playerTable (id),
    FOREIGN KEY (playerRight1Id) REFERENCES playerTable (id),
    FOREIGN KEY (playerRight2Id) REFERENCES playerTable (id)
);

CREATE INDEX IF NOT EXISTS idx_gameTable_roundId ON gameTable (roundId);
CREATE INDEX IF NOT EXISTS idx_gameTable_playerLeft1Id ON gameTable (playerLeft1Id);
CREATE INDEX IF NOT EXISTS idx_gameTable_playerLeft2Id ON gameTable (playerLeft2Id);
CREATE INDEX IF NOT EXISTS idx_gameTable_playerRight1Id ON gameTable (playerRight1Id);
CREATE INDEX IF NOT EXISTS idx_gameTable_playerRight2Id ON gameTable (playerRight2Id);

selectAll:
WITH PlayerTeams AS (
    SELECT
        playerTable.id AS playerId,
        playerTable.name,
        teamTable.name AS teamName,
        playerTable.lastPlayed
    FROM
        playerTable
    JOIN
        teamTable ON playerTable.teamId = teamTable.id
)
SELECT
    gameTable.id,
    gameTable.roundId,
    gameTable.isDone,
    gameTable.playerLeft1Id, p1L.name AS playerLeft1Name, p1L.teamName AS playerLeft1TeamName, p1L.lastPlayed AS playerLeft1LastPlayed,
    gameTable.playerLeft2Id, p2L.name AS playerLeft2Name, p2L.teamName AS playerLeft2TeamName, p2L.lastPlayed AS playerLeft2LastPlayed,
    gameTable.playerRight1Id, p1R.name AS playerRight1Name, p1R.teamName AS playerRight1TeamName, p1R.lastPlayed AS playerRight1LastPlayed,
    gameTable.playerRight2Id, p2R.name AS playerRight2Name, p2R.teamName AS playerRight2TeamName, p2R.lastPlayed AS playerRight2LastPlayed,
    gameTable.set1Left, gameTable.set1Right,
    gameTable.set2Left, gameTable.set2Right,
    gameTable.set3Left, gameTable.set3Right,
    gameTable.set4Left, gameTable.set4Right,
    gameTable.set5Left, gameTable.set5Right
FROM
    gameTable
LEFT JOIN
    PlayerTeams AS p1L ON p1L.playerId = gameTable.playerLeft1Id
LEFT JOIN
    PlayerTeams AS p2L ON p2L.playerId = gameTable.playerLeft2Id
LEFT JOIN
    PlayerTeams AS p1R ON p1R.playerId = gameTable.playerRight1Id
LEFT JOIN
    PlayerTeams AS p2R ON p2R.playerId = gameTable.playerRight2Id;

selectAllInRound:
WITH PlayerTeams AS (
    SELECT
        playerTable.id AS playerId,
        playerTable.name,
        teamTable.name AS teamName
    FROM
        playerTable
    JOIN
        teamTable ON playerTable.teamId = teamTable.id
)
SELECT
    gameTable.id,
    gameTable.roundId,
    gameTable.isDone,
    gameTable.playerLeft1Id, p1L.name AS playerLeft1Name, p1L.teamName AS playerLeft1TeamName,
    gameTable.playerLeft2Id, p2L.name AS playerLeft2Name, p2L.teamName AS playerLeft2TeamName,
    gameTable.playerRight1Id, p1R.name AS playerRight1Name, p1R.teamName AS playerRight1TeamName,
    gameTable.playerRight2Id, p2R.name AS playerRight2Name, p2R.teamName AS playerRight2TeamName,
    gameTable.set1Left, gameTable.set1Right,
    gameTable.set2Left, gameTable.set2Right,
    gameTable.set3Left, gameTable.set3Right,
    gameTable.set4Left, gameTable.set4Right,
    gameTable.set5Left, gameTable.set5Right
FROM
    gameTable
LEFT JOIN
    PlayerTeams AS p1L ON p1L.playerId = gameTable.playerLeft1Id
LEFT JOIN
    PlayerTeams AS p2L ON p2L.playerId = gameTable.playerLeft2Id
LEFT JOIN
    PlayerTeams AS p1R ON p1R.playerId = gameTable.playerRight1Id
LEFT JOIN
    PlayerTeams AS p2R ON p2R.playerId = gameTable.playerRight2Id
WHERE
    gameTable.roundId = :roundId;

select:
SELECT
    *
FROM
    gameTable
WHERE
    id = :id;

add:
INSERT INTO
    gameTable(roundId, playerLeft1Id, playerLeft2Id, playerRight1Id, playerRight2Id)
VALUES
    (:roundId, :playerLeft1Id, :playerLeft2Id, :playerRight1Id, :playerRight2Id);

update:
UPDATE
    gameTable
SET
    set1Left = :set1Left, set1Right = :set1Right,
    set2Left = :set2Left, set2Right = :set2Right,
    set3Left = :set3Left, set3Right = :set3Right,
    set4Left = :set4Left, set4Right = :set4Right,
    set5Left = :set5Left, set5Right = :set5Right,
    isDone = :isDone
WHERE
    id = :id;

delete:
DELETE FROM
    gameTable
WHERE
    id = :id;